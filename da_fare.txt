
- se si mettono copie e prestiti uguali non diventa "non disponibile"
- MEGLIO TYPEID O DYNAMIC_CAST (CONTROLLA JSON.CPP)
- CONTROLLA POLIMORFISMO SHOWOGGETTO (FILTRI,ECC,...)
- controlla metodi, tipo notificaObservers() senza parametri è un metodo di istanza (?)
- SERVE COPIA PROFONDA O QT FA DA SOLO? Vedi Json::modificaOggetto(Biblioteca* oggetto)
- VA FATTO UN CREATE E MODIFICA PER OGNI OGGETTO E POI GESTITO CON POLIMORFISMO?
- controlla dynamic_cast ad esempio su Json.cpp (si può fare con static_cast ? --> vedi anche Mazzaretto)
- va messo il const nei metodi di userpage e adminpage ?
- guarda bene polimorfismo
- colonne e righe vanno messe in maniera statica?
- lasciamo questo layout con questa finestra o facciamo dinamico?

- CONTROLLA METODI CLASSE JSON, molte ripetizioni e modifiche del tipo:
if (file.write(QJsonDocument(jsonArray).toJson()) != -1) {
        file.close();
        notificaObservers(); // Notifica gli observer dopo l'aggiornamento
        return true;
    }
    file.close();
    return false;

[] mantenuto metodo showAll() per non effetturare check inutili --> ha senso (?)




appena modificato AdminPage::eliminaOggetto(...) 11:15

